{"version":3,"sources":["webpack:///./js/task-1.js"],"names":["refs","timerId","document","querySelector","days","hours","mins","secs","selector","targetDate","this","intervalId","isActive","start","setInterval","currentTime","Date","now","deltaTime","getTimeComponents","Number","updateClockface","stop","clearInterval","idInterval","time","pad","Math","floor","textContent","value","String","padStart"],"mappings":"2JAAQA,EAAO,CACbC,QAASC,SAASC,cAAc,YAChCC,KAAMF,SAASC,cAAc,uBAC9BE,MAAOH,SAASC,cAAc,yBAC7BG,KAAMJ,SAASC,cAAc,uBAC7BI,KAAML,SAASC,cAAc,wBA0DjB,I,WApDZ,cAAoC,EAAvBK,SAAuB,IAAbC,EAAa,EAAbA,WACrBC,KAAKC,WAAa,KAClBD,KAAKE,UAAW,EACAV,SAASC,cAAcO,KAAKF,UAC5CE,KAAKD,WAAaA,EACjBC,KAAKG,Q,2BAIRA,MAAA,WAAQ,WACN,IAAIH,KAAKE,SAAT,CAGkBF,KAAKD,WACvBC,KAAKE,UAAW,EAChBF,KAAKC,WAAaG,aAAY,WAC5B,IAAMC,EAAcC,KAAKC,MACnBC,EAAY,EAAKT,WAAaM,EAFF,EAGE,EAAKI,kBAAkBD,GAAnDd,EAH0B,EAG1BA,KAAMC,EAHoB,EAGpBA,MAAOC,EAHa,EAGbA,KAAMC,EAHO,EAGPA,KAGF,IAFAa,OAAOhB,GAAQgB,OAAOf,GAASe,OAAOd,GAAQc,OAAOb,KAG5Ec,IACC,EAAKC,QAGRD,EAAgB,CAAEjB,OAAMC,QAAOC,OAAMC,WAEpC,O,EAGLe,KAAA,WACEC,cAAcb,KAAKC,YACnBD,KAAKc,WAAa,M,EAIpBL,kBAAA,SAAkBM,GAQhB,MAAO,CAAErB,KAPKsB,EAAIC,KAAKC,MAAMH,EAAO,QAOrBpB,MALZqB,EAAIC,KAAKC,MAAOH,EAAO,MAAR,OAKInB,KAHToB,EAAIC,KAAKC,MAAOH,EAAO,KAAR,MAGAlB,KAFfmB,EAAIC,KAAKC,MAAOH,EAAO,IAAe,Q,KASzC,CAAmB,CAC/BjB,SAAU,WACVC,WAAY,IAAIO,KAAK,qBAKvB,SAASK,EAAT,GAAqE,QAA3CjB,YAA2C,MAApC,EAAoC,MAAjCC,aAAiC,MAAzB,EAAyB,MAAtBC,YAAsB,MAAf,EAAe,MAAZC,YAAY,MAAL,EAAK,EACjEP,EAAKI,KAAKyB,YAAczB,EACxBJ,EAAKK,MAAMwB,YAAcxB,EAC1BL,EAAKM,KAAKuB,YAAcvB,EACvBN,EAAKO,KAAKsB,YAActB,EAG5B,SAASmB,EAAII,GACT,OAAOC,OAAOD,GAAOE,SAAS,EAAG,Q","file":"main.728194c84e592cb7b8a7.js","sourcesContent":["  const refs = {\n  timerId: document.querySelector('.timer-1'),\n  days: document.querySelector('[data-value=\"days\"]'),\n hours: document.querySelector('[ data-value=\"hours\"]'),\n  mins: document.querySelector('[data-value=\"mins\"]'),\n  secs: document.querySelector('[data-value=\"secs\"]')\n  \n}\n\n\nclass CountdownTimer{ \n  constructor({selector, targetDate}) {\n    this.intervalId = null;\n    this.isActive = false;\n    const timerId = document.querySelector(this.selector)\n    this.targetDate = targetDate;\n     this.start();\n   \n  }\n\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    const startTime = this.targetDate;\n    this.isActive = true; \n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = this.targetDate - currentTime ;\n      const { days, hours, mins, secs } = this.getTimeComponents(deltaTime);\n      const timerEndCounter =  Number(days) + Number(hours) + Number(mins) + Number(secs);\n     \n      if ( timerEndCounter === 0) {\n        updateClockface();\n         this.stop();\n      };\n\n      updateClockface({ days, hours, mins, secs });\n     \n    }, 1000);\n  }\n\n  stop() { \n    clearInterval(this.intervalId); \n    this.idInterval = null;\n  };\n\n\n  getTimeComponents(time) {\n     const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n     const hours =\n       pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    \n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n};\n  \n};\n\n\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('April, 26, 2021'),\n \n});\n\n\nfunction updateClockface({days = 0, hours = 0, mins = 0, secs = 0} ) {\n    refs.days.textContent = days;\n    refs.hours.textContent = hours;\n   refs.mins.textContent = mins;\n    refs.secs.textContent = secs;\n}\n  \nfunction pad(value) {\n    return String(value).padStart(2, '0');\n}"],"sourceRoot":""}